name: flow-tests-pw

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
      - 'README.md'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  playwright-run:
    runs-on: ubuntu-22.04-8vcpu-32gb-300gbssd
    environment: cypress
    timeout-minutes: 20
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      # ChatG: Next two steps are for correct caching and not using out-of-date
      #  versions, for reproducible results
      - name: Cache Playwright
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
          key: pw-${{ runner.os }}-${{ hashFiles('yarn.lock') }}
            
      # Use exact lock file to ensure reproducible install
      - run: yarn install --frozen-lockfile

      # Only install browsers (and OS deps) if cache missed
      - name: Install Playwright browsers
        if: steps.pw-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      # Run Playwright (headless). Assumes your playwright.config.ts handles webServer/baseURL.
      - name: Run Playwright tests
        run: yarn test-flows --reporter=github

      # Always upload the HTML report (handy to debug failures)
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report
          retention-days: 7

      # Optionally upload traces from failed tests
      - name: Upload Playwright traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-traces
          path: test-results
          retention-days: 7
        # Ensure you have trace: 'on-first-retry' (or similar) in playwright.config.ts

      # Useful diagnostic
      - name: Playwright Info
        if: failure()
        run: npx playwright --version

    env:
      # Keep your app env similar to Cypress job (adjust as needed for tests/MSW)
      GITHUB_BASE_URL: https://git.bldrs.dev.pw/p/gh
      GITHUB_BASE_URL_UNAUTHENTICATED: https://api.github.com.pw
      MSW_IS_ENABLED: true
      # These purposely don't have bogus TLDs, as PW specs needs these to pass thru
      # MSW so they can be intercepted and served from the mocks instead.
      RAW_GIT_PROXY_URL_NEW: https://rawgit.bldrs.dev/model
      RAW_GIT_PROXY_URL: https://rawgit.bldrs.dev/r
